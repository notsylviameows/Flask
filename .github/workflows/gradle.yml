name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
    id-token: "write"
    contents: "write"
    packages: "write"
    pull-requests: "read"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    - name: Build with Gradle
      run: ./gradlew build
    - name: Expose Version
      id: version
      run: echo "version=$(${{github.workspace}}/gradlew -q version )" >> $GITHUB_OUTPUT
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Flask
        path: ./*/build/libs/flask-*.jar
    
  release:
    runs-on: ubuntu-latest
    environment: release
    needs: build
    env:
      version: ${{ needs.build.outputs.version }}
      latest: ${{ vars.LATEST_VERSION }}
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: Flask
    - name: Publish Release
      if: env.version != env.latest
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ env.version }}
        prerelease: false
        title: ${{ env.version }}
        files: |
          *.jar
    - name: Publish Beta
      if: env.version == env.latest
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: ${{ env.version }}-${{ github.sha }}
        files: |
          *.jar
    - name: Update Version
      if: env.version != env.latest
      run: echo "LATEST_VERSION=${{ env.version }}" >> $GITHUB_ENV
